#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#include <Wire.h>
#include <Adafruit_ADS1X15.h>
#include <LiquidCrystal_I2C.h>
#include <TimeLib.h>
#include <DS1307RTC.h>

#define TRIGGER_PIN 14
#define ECHO_PIN 12

#define DHTOUT_PIN 27
#define DHTTYPE DHT11

#define WATERTEMP_PIN 26

DHT dht(DHTOUT_PIN, DHTTYPE);
OneWire oneWire(WATERTEMP_PIN);
DallasTemperature sensors(&oneWire);
Adafruit_ADS1115 ads;
LiquidCrystal_I2C lcd(0x27, 16, 2);

unsigned long previousMillis = 0;
int stateLcd, epochTime = 0;
float distance, temperature, watertemp, ph, humidity = 0.0;



float measureDistance(){

  //Kirim sinyal ke trigger sensor
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);

  //Baca Pulse dari echo pin
  unsigned long pulseDuration = pulseIn(ECHO_PIN, HIGH);

  //Hitung jarak berdasarkan waktu pulse
  float distance = pulseDuration * 0.0343 / 2; 

  return distance;

}

float measurePh(){
    int16_t adc0; // 16 bits ADC read of input A0
    adc0 = ads.readADC_SingleEnded(0);
    float Voltage = (adc0 * 0.1875)/1000;
    return Voltage;
}

String datetime(){
  tmElements_t tm;
  char buffer[20];
  
  if (RTC.read(tm)) {
    time_t t = makeTime(tm);
    epochTime = t;
    breakTime(t, tm);
    snprintf(buffer, sizeof(buffer), "%04d-%02d-%02d %02d:%02d:%02d", tm.Year + 1970, tm.Month, tm.Day, tm.Hour, tm.Minute, tm.Second);
    return String(buffer);
  } else {
    if (RTC.chipPresent()) {
      Serial.println("The DS1307 is stopped.  Please run the SetTime");
      Serial.println("example to initialize the time and begin running.");
      Serial.println();
    } else {
      Serial.println("DS1307 read error!  Please check the circuitry.");
      Serial.println();
    }
    delay(9000);
  }
  return "";
}

void setup() {
  // Dijalankan saat pertama kali esp32 dinyalakan:
  Serial.begin(115200);
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  dht.begin();
  sensors.begin();
  ads.begin();
  lcd.init();
  lcd.backlight();

}

void loop() {
  distance = measureDistance();
  temperature = dht.readTemperature();
  humidity = dht.readHumidity();
  sensors.requestTemperatures();
  watertemp = sensors.getTempCByIndex(0);
  ph = measurePh();

  // Dijalankan secara berulang / terus menerus
  Serial.print("Jarak : ");
  Serial.print(measureDistance());
  Serial.println(" cm");

  Serial.print("Suhu Udara : ");
  Serial.print(dht.readTemperature());
  Serial.println(" c");

  Serial.print("Kelembaban Udara : ");
  Serial.print(dht.readHumidity());
  Serial.println(" %");

  sensors.requestTemperatures();
  Serial.print("Suhu Air: ");
  Serial.print(sensors.getTempCByIndex(0));
  Serial.println(" C");

  Serial.print("PH : ");
  Serial.print(measurePh());

  unsigned long currentMillis = millis();
    if (currentMillis - previousMillis >= 1000) {
      stateLcd ++;

      if(stateLcd > 4){
        stateLcd = 0;
      }

      if(stateLcd == 1){
        lcd.clear();
        lcd.setCursor(0, 0); // Set cursor ke baris 1, kolom 1
        lcd.print("WL     :"); // Menampilkan teks di LCD
        lcd.setCursor(9, 0);
        lcd.print(distance); // Menampilkan teks di LCD
        lcd.setCursor(14, 0);
        lcd.print("cm"); 

        lcd.setCursor(0, 1); // Set cursor ke baris 1, kolom 1
        lcd.print("TEMP   :"); // Menampilkan teks di LCD
        lcd.setCursor(9, 1);
        lcd.print(temperature); // Menampilkan teks di LCD
        lcd.setCursor(14, 1);
        lcd.print("c"); 
      }
      else if(stateLcd == 2){
        lcd.clear();
        lcd.setCursor(0, 0); // Set cursor ke baris 1, kolom 1
        lcd.print("HUM    :"); // Menampilkan teks di LCD
        lcd.setCursor(9, 0);
        lcd.print(humidity); // Menampilkan teks di LCD
        lcd.setCursor(15, 0);
        lcd.print("%"); 

        lcd.setCursor(0, 1); // Set cursor ke baris 1, kolom 1
        lcd.print("WTRTMP :"); // Menampilkan teks di LCD
        lcd.setCursor(9, 1);
        lcd.print(watertemp); // Menampilkan teks di LCD
        lcd.setCursor(15, 1);
        lcd.print("c"); 
      }
      else if(stateLcd == 3){
        lcd.clear();
        lcd.setCursor(0, 0); // Set cursor ke baris 1, kolom 1
        lcd.print("PH     :"); // Menampilkan teks di LCD
        lcd.setCursor(9, 0);
        lcd.print(ph); // Menampilkan teks di LCD
        lcd.setCursor(15, 0);
        lcd.print(""); 
      }
      else if(stateLcd == 4){
        lcd.clear();
        lcd.setCursor(0, 0); // Set cursor ke baris 1, kolom 1
        lcd.print("DATETIME :"); // Menampilkan teks di LCD
        lcd.setCursor(0, 1);
        lcd.print(datetime());
    }

      // Perbarui previousMillis
      previousMillis = currentMillis;
    }


  delay(1000);


}